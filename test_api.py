#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API Sakura Sushi
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:5000"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL

def test_health_check():
    """–¢–µ—Å—Ç health check endpoint"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check...")
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Health check OK: {data}")
            return True
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Health check error: {e}")
        return False

def test_chat_api():
    """–¢–µ—Å—Ç chat API"""
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ chat API...")
    
    test_messages = [
        "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å?",
        "–†–µ–∫–æ–º–µ–Ω–¥—É–π—Ç–µ —Ä–æ–ª–ª—ã",
        "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?",
        "–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—é"
    ]
    
    for message in test_messages:
        try:
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞: {message}")
            response = requests.post(
                f"{BASE_URL}/api/chat",
                json={
                    "message": message,
                    "history": []
                },
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                data = response.json()
                print(f"üì• –û—Ç–≤–µ—Ç: {data['response']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            
            time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_menu_api():
    """–¢–µ—Å—Ç menu API"""
    print("\nüç£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ menu API...")
    try:
        response = requests.get(f"{BASE_URL}/api/menu")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Menu API OK: {len(data['menu'])} –±–ª—é–¥")
            for item in data['menu'][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - {item['name']}: {item['price']} ‚ÇΩ")
        else:
            print(f"‚ùå Menu API failed: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Menu API error: {e}")

def test_order_api():
    """–¢–µ—Å—Ç order API"""
    print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ order API...")
    
    test_order = {
        "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç",
        "phone": "+79123456789",
        "email": "test@example.com",
        "address": "–≥. –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1",
        "delivery_time": "asap",
        "payment_method": "cash",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑",
        "items": [
            {
                "title": "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è",
                "price": 490,
                "quantity": 1
            }
        ],
        "total": 490
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/order",
            json=test_order,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Order API OK: {data}")
        else:
            print(f"‚ùå Order API failed: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"‚ùå Order API error: {e}")

def test_main_page():
    """–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    print("\nüè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    try:
        response = requests.get(BASE_URL)
        if response.status_code == 200:
            if "Sakura Sushi" in response.text:
                print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print("‚ö†Ô∏è –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ failed: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ error: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Sakura Sushi API")
    print(f"üìç URL: {BASE_URL}")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    tests = [
        test_health_check,
        test_main_page,
        test_menu_api,
        test_chat_api,
        test_order_api
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
        except:
            pass
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")

if __name__ == "__main__":
    main()
